function output_txt = iad_plot_results_callback(hh,event_obj,E ,FROM)
% Display the position of the data cursor
% obj          Currently not used (empty)
% event_obj    Handle to event object
% output_txt   Data cursor text string (string or cell array of strings).
% global E FROM


pos = get(event_obj,'Position');
% get(gco)
jex=0;
if ~isempty(E.Ev_Ex.data)
    ts=86400*(E.Ev_Ex.data(:,1)-FROM);
    ts=floor(ts*10)/10;
%     floor(pos(1)*10)/10
    jex= ts==floor(pos(1)*10)/10;
end
jcav=0;
if ~isempty(E.Ev_Cav.data)
    ts=86400*(E.Ev_Cav.data(:,1)-FROM);
    jcav= ts==pos(1);
end
jnav=0;
if ~isempty(E.Ev_Nav.data)
    ts=86400*(E.Ev_Nav.data(:,1)-FROM);
    jnav= ts==pos(1);
end

sum(jex)
if sum(jex)>0,
%     ts=86400*(E.Ev_Ex.data(:,1)-T0);
    output_txt = {['Time: ',datestr(FROM+pos(1)/86400)], ...
    ['Pressure: ',num2str(round(E.Ev_Ex.data(jex,6)*100)/100),' Pa'], ...
    ['Baz_av: ',num2str(round(E.Ev_Ex.data(jex,8)*10)/10),' ?N'], ...
    ['Baz_start: ',num2str(round(E.Ev_Ex.data(jex,20)*10)/10),' ?N'], ...
    ['Baz_end: ',num2str(round(E.Ev_Ex.data(jex,21)*10)/10),' ?N'], ...
    ['Duration: ',num2str(round(E.Ev_Ex.data(jex,18)*10)/10),' msec'], ...
    ['Coherence: ',num2str(round(E.Ev_Ex.data(jex,4)*1000)/10),' %'], ...
    ['V_trend: ',num2str(round(E.Ev_Ex.data(jex,12)*10)/10)], ...
    ['Max vel.: ',num2str(round(E.Ev_Ex.data(jex,11))),' m/s'], ...
    ['Mean vel.: ',num2str(round(E.Ev_Ex.data(jex,10))),' m/s'], ...
    ['Frequency: ',num2str(round(E.Ev_Ex.data(jex,13)*10)/10),' Hz']};
end

if sum(jcav)>0,
%     ts=86400*(E.Ev_Ex.data(:,1)-T0);
    output_txt = {['Time: ',datestr(FROM+pos(1)/86400)],...
    ['Pressure: ',num2str(round(E.Ev_Cav.data(jcav,6)*100)/100),' Pa'],...
    ['Baz_start: ',num2str(round(E.Ev_Cav.data(jcav,20)*10)/10),' ?N'], ...
    ['Baz_end: ',num2str(round(E.Ev_Cav.data(jcav,21)*10)/10),' ?N'], ...
    ['Duration: ',num2str(round(E.Ev_Cav.data(jcav,3)*10)/10),' sec'],...
    ['Coherence: ',num2str(round(E.Ev_Cav.data(jcav,4)*1000)/10),' %'],...
    ['V_trend: ',num2str(round(E.Ev_Cav.data(jcav,12)*10)/10)],...
    ['Max vel.: ',num2str(round(E.Ev_Cav.data(jcav,11))),' m/s'],...
    ['Mean vel.: ',num2str(round(E.Ev_Cav.data(jcav,10))),' m/s'],...
    ['Frequency: ',num2str(round(E.Ev_Cav.data(jcav,13)*10)/10),' Hz'],...
    ['Vel. Stab. Index: ',num2str(100*round(E.Ev_Cav.data(jcav,19)*100)/100),'%'], ...
    ['Az. Stab. Index: ',num2str(100*round(E.Ev_Cav.data(jcav,18)*100)/100),'%']};
end

if sum(jnav)>0,
%     ts=86400*(E.Ev_Ex.data(:,1)-T0);
    output_txt = {['Time: ',datestr(FROM+pos(1)/86400)],...
    ['Pressure: ',num2str(round(E.Ev_Nav.data(jnav,6)*100)/100),' Pa'],...
    ['Baz_start: ',num2str(round(E.Ev_Nav.data(jnav,20)*10)/10),' ?N'], ...
    ['Baz_end: ',num2str(round(E.Ev_Nav.data(jnav,21)*10)/10),' ?N'], ....
    ['Duration: ',num2str(round(E.Ev_Nav.data(jnav,3)*10)/10),' sec'],...
    ['Coherence: ',num2str(round(E.Ev_Nav.data(jnav,4)*1000)/10),' %'],...
    ['V_trend: ',num2str(round(E.Ev_Nav.data(jnav,12)*10)/10)],...
    ['Max vel.: ',num2str(round(E.Ev_Nav.data(jnav,11))),' m/s'],...
    ['Mean vel.: ',num2str(round(E.Ev_Nav.data(jnav,10))),' m/s'],...
    ['Frequency: ',num2str(round(E.Ev_Nav.data(jnav,13)*10)/10),' Hz'],...
    ['Vel. Stab. Index: ',num2str(100*round(E.Ev_Nav.data(jnav,19)*100)/100),'%'], ...
    ['Az. Stab. Index: ',num2str(100*round(E.Ev_Nav.data(jnav,18)*100)/100),'%']};
end



    
    return

ts=86400*(E.data(:,1)-T1);
j= ts==pos(1);
output_txt = {['Time: ',datestr(T1+pos(1)/86400)],...
    ['Pressure: ',num2str(E.data(j,6)),' Pa'],...
    ['Baz: ',num2str(E.data(j,8)),' ?N'],...
    ['Baz_sd: ',num2str(E.data(j,9)),' ?N'],...
    ['Duration: ',num2str(E.data(j,3)),' sec'],...
    ['Coherence: ',num2str(E.data(j,4)*100),' %'],...
    ['V_trend: ',num2str(E.data(j,12))],...
    ['Max vel.: ',num2str(E.data(j,11)),' m/s'],...
    ['Mean vel.: ',num2str(E.data(j,10)),' m/s'],...
    ['Frequency: ',num2str(E.data(j,13)),' Hz']};

baz=E.data(j,8);
set(lin,'xdata',[lon lon+.1*sind(baz)],'ydata',[lat lat+.1*cosd(baz)])

% If there is a Z-coordinate in the position, display it as well
if length(pos) > 2
    output_txt{end+1} = ['Z: ',num2str(pos(3),4)];
end

